{"version":3,"sources":["components/Header.js","components/Articulo.js","components/ArticuloComprado.js","components/Home.js","actions/ventaActions.js","reducers/ventaReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","href","titulo","Articulo","producto","this","nombre","precio","preparacion","onClick","addItem","React","Component","ArticuloComprado","articulo","Home","productos","map","key","id","venta","total","connect","state","dispatch","setTimeout","type","ventaReducer","lastValues","action","console","log","createStore","combineReducers","applyMiddleware","createPromise","thunk","App","store","pedidos","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.553cd8b1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = (props) =>{\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">{props.titulo}</a>\n            {/*<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"*/}\n            {/*        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"*/}\n            {/*        aria-expanded=\"false\"*/}\n            {/*        aria-label=\"Toggle navigation\">*/}\n            {/*    <span className=\"navbar-toggler-icon\"></span>*/}\n            {/*</button>*/}\n        </nav>\n    );\n}\n","import React from 'react';\n\nexport class Articulo extends React.Component{\n\n    constructor(props) {\n        super();\n        this.producto = props.producto;\n    }\n\n    render() {\n        return (\n            <article className=\"post\">\n                <p>{ this.producto.nombre }</p>\n                <div className=\"info\">\n                    Precio ${ this.producto.precio }<br/>\n                    Tiempo de preparaci√≥n { this.producto.preparacion / 1000} seg.\n                </div>\n                <div className=\"interaction\">\n                    <a href=\"#\" onClick={() => this.props.addItem()}>Comprar</a>\n                </div>\n            </article>\n        );\n    }\n}","import React from 'react';\n\nexport class ArticuloComprado extends React.Component{\n\n    constructor(props) {\n        super();\n        this.articulo = props.articulo;\n    }\n\n    render() {\n        return (\n            <article className=\"post2\">\n                <p>{ this.articulo.nombre }</p>\n                {/*<div className=\"info\">*/}\n                {/*    Precio ${ this.articulo.precio }*/}\n                {/*</div>*/}\n            </article>\n        );\n    }\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {addItem} from \"../actions/ventaActions\";\nimport {Articulo} from \"./Articulo\";\nimport {ArticuloComprado} from \"./ArticuloComprado\";\n\nclass Home extends React.Component{\n\n    constructor(props) {\n        super();\n        this.productos = props.productos;\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"row posts espacio-arriba linea-abajo\">\n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <header><h3>Productos</h3></header>\n                        { this.props.productos.map((producto) => <Articulo producto={producto} key={producto.id} addItem={() => this.props.addItem(producto.id, producto.nombre, producto.precio, producto.preparacion)}/>) }\n                    </div>\n\n                    <div className=\"col-md-6 col-md-offset-3\">\n                        <header><h3>Pedidos completados</h3></header>\n\n                            { this.props.venta.articulo.map((articulo, id) => <ArticuloComprado key={id} articulo={articulo} />) }\n\n\n                        <header>Total comprado</header>\n                        $ {this.props.venta.total}\n\n                    </div>\n\n                </section>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        venta: state.venta\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItem: (id, nombre, precio, preparacion) => {\n            dispatch( addItem(id, nombre, precio, preparacion) );\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","export function addItem(id,nombre,precio,preparacion) {\n    return dispatch =>{\n        setTimeout(() =>\n            dispatch({\n                type: \"ADD\",\n                id: id,\n                nombre: nombre,\n                precio: precio\n            }),preparacion);\n    };\n}\n","const ventaReducer = (state = {\n    total: 0,\n    articulo:[],\n    lastValues: [],\n}, action) => {\n    switch (action.type) {\n        case \"ADD\":\n            state = {\n                ...state,\n                total: state.total + action.precio,\n                articulo: [...state.articulo, {id:action.id, nombre: action.nombre, precio: action.precio, preparacion:action.preparacion}]\n            };\n            console.log('AQUI'+state.articulo)\n            break;\n        case \"ADD_FULFILLED\":\n            break;\n        case \"SUBTRACT\":\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default ventaReducer;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport { createPromise } from \"redux-promise-middleware\";\nimport thunk from \"redux-thunk\";\n\nimport venta from \"./reducers/ventaReducer\";\n\nexport default createStore(\n    combineReducers({\n        venta\n    }),\n    {},\n    applyMiddleware(createPromise(), thunk)\n);","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Header } from './components/Header';\nimport Home from './components/Home';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n\n    var productos = [\n        {id:1, nombre:\"Hamburguesa\", precio:1.5, pedidos:0, preparacion:8000},\n        {id:2, nombre:\"Pizza\", precio:1.5, pedidos:0, preparacion:10000},\n        {id:3, nombre:\"Coca-Cola\", precio:1.5, pedidos:0, preparacion:1000},\n        {id:4, nombre:\"Pepsi\", precio:1.0, pedidos:0, preparacion:1000},\n        {id:5, nombre:\"Agua Cristal\", precio:0.5, pedidos:0, preparacion:1000}\n    ]\n\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n      <div>\n          <Header titulo={\"Vending machine\"}/>\n          <div className=\"App\">\n              <div className=\"container\">\n                  <Provider store={store}>\n                      <Home productos={productos}/>\n                  </Provider>\n              </div>\n          </div>\n      </div>\n\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}